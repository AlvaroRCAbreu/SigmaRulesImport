name: Sigma CLI Workflow

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Permite execução manual

jobs:
  run-sigma-cli:
    runs-on: ubuntu-latest

    env:
      SIGMA_RULE_PATH: ${{ secrets.SIGMA_RULE_PATH }}  # Variável para o caminho da regra (armazenada como segredo)
      DATADOG_API_KEY: ${{ secrets.DD_API_KEY }}  # Chave de API do Datadog (armazenada como segredo)

    steps:
    # Etapa 1: Clonar o repositório público no GitHub (repositório específico pode ser clonado no script)
    - name: Checkout Repository
      uses: actions/checkout@v3

    # Etapa 2: Instalar Sigma-CLI
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install Sigma CLI
      run: |
         pip install pysigma==0.11.7  # Instala a versão correta do pysigma
         pip install sigmatools==1.0.4  # Instala sigma-cli

    # Etapa 3: Adicionar Plugin ao Sigma-CLI
    - name: Install Sigma Plugin
      run: |
        sigma plugin install datadog -f

    # Etapa 4: Executar Sigma-CLI com a regra
    - name: Run Sigma CLI with Rule
      run: |
        sigma_output=$(sigma convert -t datadog $SIGMA_RULE_PATH)  
        echo "$sigma_output"
      id: sigma-cli-run

    # Etapa 5: Enviar resultado para o Datadog via API
    - name: Send Result to Datadog
      run: |
        sigma_output="${{ steps.sigma-cli-run.outputs.sigma_output }}"
        curl -X POST "https://api.datadoghq.com/api/v1/events" \
          -H "Content-Type: application/json" \
          -H "DD-API-KEY: $DATADOG_API_KEY" \
          -d '{
                "title": "Sigma CLI Output",
                "text": "'"$sigma_output"'",
                "priority": "normal",
                "tags": ["sigma"],
                "alert_type": "info"
              }'
